JavaScript runs single threaded. There is just one thing happening at a time.
This is the limitation that is actually useful as it simplifies a lot how you program
without worrying about concurrency issues.

In general, in most browsers there is an event loop for every browser tab,
to make every process isolated and avoid a web page with infinite loops
or heavy processing to block your entire browser.

The environment manages multiple concurrent event loops, to handle API calls 
for example. Web Workers run in their own event loop as well.

You mainly need to be concerned that your code will run on a single event loop, 
and write code with this thing in mind to avoid blocking it.

The call stack is a LIFO queue (Last In, First Out).

The event loop continuously checks the call stack to see if thereâ€™s any function
that needs to run.

While doing so, it adds any function call it finds to the call stack
and executes each one in order.

